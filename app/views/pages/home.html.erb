<div class="container">
  <h1>Trouver une soupe</h1>
  <form class="form-inline" action="/search">
    <div class="form-group">
    <label class="sr-only" for="address">Addresse</label>
      <input type="text" class="form-control" name="address" id="address" placeholder="Addresse">
    </div>
    <div class="form-group">
      <label class="sr-only" for="date">Date</label>
      <input type="text" class="form-control" name="date" id="datepicker" placeholder="Date">
    </div>
    <div class="form-group">
      <input type="hidden" class="form-control" name="lat" id="lat">
    </div>
    <div class="form-group">
      <input type="hidden" class="form-control" name="lon" id="lon">
    </div>
    <button type="submit" class="btn btn-default">Chercher</button>
  </form>
</div>

<% content_for(:after_js) do %>
  <%= javascript_tag do %>
  <!-- <script> -->
    $('#datepicker').datepicker({
      format: "dd/mm/yyyy",
      weekStart: 1,
      language: "fr",
      autoclose: true
    });

    var placeSearch, autocomplete;

    function initAutocomplete() {
      // Create the autocomplete object, restricting the search to geographical
      // location types.
      autocomplete = new google.maps.places.Autocomplete(
          /** @type {!HTMLInputElement} */(document.getElementById('address')),
          {types: ['geocode']});

      // When the user selects an address from the dropdown, populate the address
      // fields in the form.
      autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
      // Get the place details from the autocomplete object.
      var place = autocomplete.getPlace();

      // for (var component in componentForm) {
      //   document.getElementById(component).value = '';
      //   document.getElementById(component).disabled = false;
      // }

      // Get each component of the address from the place details
      // and fill the corresponding field on the form.
      for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (addressType == 'street_number') {
          street_number = place.address_components[i]['long_name']
        } else if (addressType == 'route') {
          route = place.address_components[i]['long_name']
        } else if (addressType == 'locality') {
          locality = place.address_components[i]['long_name']
        } else if (addressType == 'postal_code') {
          postal_code = place.address_components[i]['long_name']
        } else if (addressType == 'country') {
          country = place.address_components[i]['long_name']
        }
      }
      document.getElementById('address').value = place['formatted_address'];
      document.getElementById('lat').value = place.geometry.location.lat();
      document.getElementById('lon').value = place.geometry.location.lng();
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          var circle = new google.maps.Circle({
            center: geolocation,
            radius: position.coords.accuracy
          });
          autocomplete.setBounds(circle.getBounds());
        });
      }
    }

    initAutocomplete();

  <% end %>
  <!-- </script> -->
<% end %>
